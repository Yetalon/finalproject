@using passfrontend.Models
@using passfrontend.Services
@page "/createlogin"
@inject UsersApiServices UsersApiService

<div class="row">
    <div class="col-md-12">
        <div class="card p-4 mx-auto" style="max-width: 400px;">
            <h1>Create login</h1>
            <div class="form-group">
                <label>Username</label>
                <input class="form-control" @bind=UserName placeholder="Enter Username">
            </div>
            <div class="form-group mt-2">
                <label>Password</label>
                <input class="form-control" type="password" @bind=UserPassword placeholder="Enter Password">
            </div>
            <button class="btn btn-primary mt-3 w-100" @onclick=CreateUser>Create Login</button>
            <div class="text-danger mt-3">@message</div>
        </div>
        <div class="mt-4 text-center">
            <a href="/">Login</a>
        </div>
    </div>
</div>

@code{
    /// <summary>
    /// users inputed username
    /// </summary>
    string? UserName{get; set;}
    /// <summary>
    /// users inputed password
    /// </summary>
    string? UserPassword {get; set;}
    /// <summary>
    /// new user to hold the values the user inputs for creation
    /// </summary>
    User user = new();
    /// <summary>
    /// message to display when creation is successful or failed
    /// </summary>
    private string? message {get; set;}
    /// <summary>
    /// Takes the inputed username and password creates the user
    /// </summary>
    public async Task CreateUser(){
        if(string.IsNullOrEmpty(UserName) || string.IsNullOrEmpty(UserPassword)){
            message = "Error: one or more fields are empty";
            return;
        }
        user.UserName = UserName;
        user.Password = UserPassword;
        message = await UsersApiService.CreateUser(user);
    }
}